train_data <- cbind(as.data.table(subject_train), y_train, X_train)
# Merge test and train data
data = rbind(test_data, train_data)
id_labels   = c("subject", "Activity_ID", "Activity_Label")
data_labels = setdiff(colnames(data), id_labels)
melt_data      = melt(data, id = id_labels, measure.vars = data_labels)
# Apply mean function to dataset using dcast function
tidy_data   = dcast(melt_data, subject + Activity_Label ~ variable, mean)
write.table(tidy_data, file = "./tidy_data.txt", row.names = FALSE)
## Create one R script called run_analysis.R that does the following:
## 1. Merges the training and the test sets to create one data set.
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive activity names.
## 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
#If needed:
#install.packages("data.table")
#install.packages("reshape2")
library(reshape2)
library(data.table)
# Load: activity labels
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
# Load: data column names
features <- read.table("./UCI HAR Dataset/features.txt")[,2]
# Extract only the measurements on the mean and standard deviation for each measurement.
extract_features <- grepl("mean|std", features)
# Load and process X_test & y_test data.
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(X_test) = features
# Extract only the measurements on the mean and standard deviation for each measurement.
X_test = X_test[,extract_features]
# Load activity labels
y_test[,2] = activity_labels[y_test[,1]]
names(y_test) = c("Activity_ID", "Activity_Label")
names(subject_test) = "subject"
# Bind data
test_data <- cbind(as.data.table(subject_test), y_test, X_test)
# Load and process X_train & y_train data.
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
names(X_train) = features
# Extract only the measurements on the mean and standard deviation for each measurement.
X_train = X_train[,extract_features]
# Load activity data
y_train[,2] = activity_labels[y_train[,1]]
names(y_train) = c("Activity_ID", "Activity_Label")
names(subject_train) = "subject"
# Bind data
train_data <- cbind(as.data.table(subject_train), y_train, X_train)
# Merge test and train data
data = rbind(test_data, train_data)
id_labels   = c("subject", "Activity_ID", "Activity_Label")
data_labels = setdiff(colnames(data), id_labels)
melt_data      = melt(data, id = id_labels, measure.vars = data_labels)
# Apply mean function to dataset using dcast function
tidy_data   = dcast(melt_data, subject + Activity_Label ~ variable, mean)
write.table(tidy_data, file = "./tidy_data.txt", row.names = FALSE)
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
DT = read.csv(file=URL)
?strsplit
strsplit(DT, wgtp)
strsplit(DT, "wgtp")
split = strsplit(DT(wgtp), "\\.")
split = strsplit(names(DT), "wgtp")
split[123]
View(DT)
split = strsplit(names(DT), "veh")
split[123]
print names(DT)
x = names(DT)
print x
x
split = strsplit(names(DT), "veh")
split[1]
split = strsplit(names(DT), "blabla")
split
split[1,1]
split[1[1]]
split[1]
split[1[2]]
split[1[1[1]]]
DT2 = read.csv(file=URL2)
URL2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
DT2 = read.csv(file=URL2)
View(DT2)
X.3
DT2$X.3
gsub(","","", DT2$X.3)
gsub(",", "",  DT2$X.3)
a<-gsub(",", "",  DT2$X.3)
a
mean(a)
mean(a, na.rm = TRUE)
a = rm.na(a)
a<-gsub(",", ,  DT2$X.3)
?gsub
a
a + as.numeric(a)
a = as.numeric(a)
a
mean(a, na.rm = TRUE)
median(a, na.rm = TRUE)
View(DT2)
mean(a[1:220], na.rm = TRUE)
grep("*United",x.2)
grep("*United",DT2$x.2)
grep("^United",DT2$x.2)
URL4 <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
URL3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
GDP<-read.csv(file=URL3)
Edu <-read.csv(file=URL4)
library(tidyr)
library(dplyr)
common <-merge(Edu, GDP, by="CountryCode")
common
common <-merge(Edu, GDP, by="CountryCode")
common <-merge(Edu, GDP, by="CountryCode")
View(GDP)
common <-merge(Edu, GDP, by="x")
View(Edu)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
grep(2012, amzn)
grepl(2012, amzn)
amzn$xts
View(amzn)
View(amzn)
1509-1260
12/15
setwd("C:\\Users\\Ajna\\Downloads\\exdata-data-household")
getwd()
#Reading data from source file
electricity <- read.table(file="household_power_consumption.txt", sep =";", header = TRUE)
# Subsetting and binding data
household_cons1 <- subset(electricity, Date == '1/2/2007')
household_cons2 <- subset(electricity, Date == '2/2/2007')
household_cons <- rbind(household_cons1, household_cons2)
#Changing date and time
household_cons$DateTime <- paste(household_cons$Date, household_cons$Time)
household_cons$DateTime = as.POSIXlt(epc$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Global_active_power<- as.numeric(as.character(household_cons$Global_active_power))
#Creating plot
par(mar=c(3,4,1,5))
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#Creating png
dev.copy(png, file="plot2.png")
dev.off()
View(household_cons)
household_cons$DateTime = as.POSIXlt(household_cons$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Global_active_power<- as.numeric(as.character(household_cons$Global_active_power))
#Creating plot
par(mar=c(3,4,1,5))
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#Creating png
dev.copy(png, file="plot2.png")
dev.off()
Sys.setlocale("Lc_ALL", "English")
Sys.setlocale("LC_ALL", "English")
par(mar=c(3,4,1,5))
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
dev.copy(png, file="plot2.png")
dev.off()
setwd("C:\\Users\\Ajna\\Downloads\\exdata-data-household")
getwd()
Sys.setlocale("LC_ALL", "English"
#Reading data from source file
electricity <- read.table(file="household_power_consumption.txt", sep =";", header = TRUE)
# Subsetting and binding data
household_cons1 <- subset(electricity, Date == '1/2/2007')
household_cons2 <- subset(electricity, Date == '2/2/2007')
household_cons <- rbind(household_cons1, household_cons2)
#Changing date and time
household_cons$DateTime <- paste(household_cons$Date, household_cons$Time)
household_cons$DateTime = as.POSIXlt(household_cons$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Sub_metering_1<- as.numeric(as.character(household_cons$Sub_metering_1))
household_cons$Sub_metering_2<- as.numeric(as.character(household_cons$Sub_metering_2))
household_cons$Sub_metering_3<- as.numeric(as.character(household_cons$Sub_metering_3))
#Creating plot
par(mar=c(3,4,1,5))
plot(household_cons$Time, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$Time, household_cons$Sub_metering_2, col="red")
lines(household_cons$Time, household_cons$Sub_metering_3, col="blue")
#Creating png
dev.copy(png, file="plot3.png")
dev.off()
View(household_cons)
setwd("C:\\Users\\Ajna\\Downloads\\exdata-data-household")
getwd()
Sys.setlocale("LC_ALL", "English"
#Reading data from source file
electricity <- read.table(file="household_power_consumption.txt", sep =";", header = TRUE)
# Subsetting and binding data
household_cons1 <- subset(electricity, Date == '1/2/2007')
household_cons2 <- subset(electricity, Date == '2/2/2007')
household_cons <- rbind(household_cons1, household_cons2)
#Changing date and time
household_cons$DateTime <- paste(household_cons$Date, household_cons$Time)
household_cons$DateTime = as.POSIXlt(household_cons$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Sub_metering_1<- as.numeric(as.character(household_cons$Sub_metering_1))
household_cons$Sub_metering_2<- as.numeric(as.character(household_cons$Sub_metering_2))
household_cons$Sub_metering_3<- as.numeric(as.character(household_cons$Sub_metering_3))
#Creating plot
par(mar=c(3,4,1,5))
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
#Creating png
dev.copy(png, file="plot3.png")
dev.off()
legend("topright", "sub metering 1", col="black")
legend("topright", "sub metering 1",lty = 1, col="black")
legend("topright", "sub metering 1",type = "l", col="black")
?legend
legend("topright", "sub metering 1",lty = 1, lwd = 1, col="black")
legend("topright", "sub metering 1",lty = 1, lwd = 1, col="black",
"sub metering 2", lty = 1, lwd = 1, col= "red",
"sub metering 3", lty = 1, lwd = 1, col= "blue")
legend("topright", "sub metering 1",lty = 1, lwd = 1, col="black",
legend("sub metering 2", lty = 1, lwd = 1, col= "red")
legend("sub metering 3", lty = 1, lwd = 1, col= "blue")
legend("topright", "sub metering 1",lty = 1, lwd = 1, col="black",
legend("topright", "sub metering 2", lty = 1, lwd = 1, col= "red")
legend("topright", "sub metering 3", lty = 1, lwd = 1, col= "blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue))"
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"))
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"))
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex=0.5)
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex=0.7)
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex=0.8)
#Changing date and time
household_cons$DateTime <- paste(household_cons$Date, household_cons$Time)
household_cons$DateTime = as.POSIXlt(household_cons$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Sub_metering_1<- as.numeric(as.character(household_cons$Sub_metering_1))
household_cons$Sub_metering_2<- as.numeric(as.character(household_cons$Sub_metering_2))
household_cons$Sub_metering_3<- as.numeric(as.character(household_cons$Sub_metering_3))
#Creating plot
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex=0.8)
#Creating png
dev.copy(png, file="plot3.png")
dev.off()
dev.copy(png, file="plot3.png")
dev.off()
dev.copy(png, file="plot4.png")
# Subsetting and binding data
household_cons1 <- subset(electricity, Date == '1/2/2007')
household_cons2 <- subset(electricity, Date == '2/2/2007')
household_cons <- rbind(household_cons1, household_cons2)
#Changing date and time
household_cons$DateTime <- paste(household_cons$Date, household_cons$Time)
household_cons$DateTime = as.POSIXlt(household_cons$DateTime,format="%d/%m/%Y %H:%M:%S")
#Converting factor to numeric
household_cons$Global_active_power<- as.numeric(as.character(household_cons$Global_active_power))
household_cons$Voltage <-as.numeric(as.character(household_cons$Voltage))
household_cons$Sub_metering_1<- as.numeric(as.character(household_cons$Sub_metering_1))
household_cons$Sub_metering_2<- as.numeric(as.character(household_cons$Sub_metering_2))
household_cons$Sub_metering_3<- as.numeric(as.character(household_cons$Sub_metering_3))
household_cons$Global_reactive_power<- as.numeric(as.character(household_cons$Global_reactive_power))
#Creating plots
par(mfrow(2,2))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, xlab = "datetime")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.8)
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power, xlab = "datetime")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
?par
#Creating plots
par(mfrow(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, xlab = "datetime")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.8)
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power, xlab = "datetime")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow=(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.8)
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow=(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.8)
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
?legend
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.8, box.lty = "o")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.4, box.col = "transparent")
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.4, box.col = "transparent")
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.5, box.col = "transparent")
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.5, bty="n")
par(mfrow=(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.5, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = """, pt.cex=0.7)
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = """, pt.cex=0.7)
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power (kilowatts)",
xlab = "", pt.cex = 0.7)
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "", pt.cex = 0.7)
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
warnings()
par(mfrow=(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.5, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow=(c(2,2)))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
par(mfrow=(c(2,2)), mar=(1,1,1,1))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
par(mfrow=(c(2,2)), mar=(1,1,1,1))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
par(env)
par(mfrow=c(2,2), mar =(1,1,1,1)
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
?plot
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage", outer = TRUE)
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
dev.off()
par(mfrow=c(2,2), mar =(1,1,1,1)
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow=c(2,2), mar =(1,1,1,1))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow=c(2,2))
#1
plot(household_cons$DateTime, household_cons$Global_active_power,type= "l", ylab = "Global Active Power",
xlab = "")
#2
plot(household_cons$DateTime, household_cons$Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
#3
plot(household_cons$DateTime, household_cons$Sub_metering_1,type = "l", ylab = "Energy sub metering")
lines(household_cons$DateTime, household_cons$Sub_metering_2, col="red")
lines(household_cons$DateTime, household_cons$Sub_metering_3, col="blue")
legend("topright", c("sub metering 1","sub metering 2","sub metering 3"),lty = 1, lwd = 1, col=c("black","red", "blue"), cex = 0.7, bty="n")
#4
plot(household_cons$DateTime, household_cons$Global_reactive_power,type= "l", xlab = "datetime", ylab="Global_reactive_power")
#Creating png
dev.copy(png, file="plot4.png")
dev.off()
